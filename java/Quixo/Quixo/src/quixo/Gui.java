package quixo;
import quixo.Game.*;
import java.util.HashMap;

public class Gui extends javax.swing.JFrame {

    private Game game;
    private int cubeX;
    private int cubeY;
    private HashMap<String,javax.swing.JButton> map;
    
    public Gui() {
        initComponents();
        game = new Game();
        currentNotificationLabel.setText("Select START NEW GAME to start.");
        map = new HashMap<String,javax.swing.JButton>();
        map.put("x0y0", x0y0);
        map.put("x1y0", x1y0);
        map.put("x2y0", x2y0);
        map.put("x3y0", x3y0);
        map.put("x4y0", x4y0);
        map.put("x0y1", x0y1);
        map.put("x1y1", x1y1);
        map.put("x2y1", x2y1);
        map.put("x3y1", x3y1);
        map.put("x4y1", x4y1);
        map.put("x0y2", x0y2);
        map.put("x1y2", x1y2);
        map.put("x2y2", x2y2);
        map.put("x3y2", x3y2);
        map.put("x4y2", x4y2);
        map.put("x0y3", x0y3);
        map.put("x1y3", x1y3);
        map.put("x2y3", x2y3);
        map.put("x3y3", x3y3);
        map.put("x4y3", x4y3);
        map.put("x0y4", x0y4);
        map.put("x1y4", x1y4);
        map.put("x2y4", x2y4);
        map.put("x3y4", x3y4);
        map.put("x4y4", x4y4);
        
        moveUp.setEnabled(false);
        moveRight.setEnabled(false);
        moveLeft.setEnabled(false);
        moveDown.setEnabled(false);
        String cube="";
        for(int x=0; x<5; x++)
        {
            for(int y=0; y<5; y++)
            {
                cube="x"+x+"y"+y;
                map.get(cube).setEnabled(false);
            }
        }
        playerChoiceX.setEnabled(false);
        playerChoiceO.setEnabled(false);
        quitGame.setEnabled(false);
        resetGame.setEnabled(false);
    }
    
    public void selectCube(int x, int y)
    {
        cubeX = x;
        cubeY = y;
        cubeCoordinatesLabel.setText("{ "+cubeX+" , "+cubeY+" }");
    }
    
    public void selectDirection(Direction dir)
    {
        if(cubeX >= 0 && cubeY >= 0)
        {
            game.moveCube(cubeX, cubeY, dir);
            currentNotificationLabel.setText(game.getGameNote());
            if(!(game.getGameNote().equals("INVALID MOVE! PLEASE TRY AGAIN.")))
            {
                updateBoard(cubeX, cubeY, dir);
                turnLabel.setText(game.getCurrentPlayer().toString());
                FaceType winner = game.checkVictory();
                if(winner != FaceType.BLANK)
                {
                    currentNotificationLabel.setText("PLAYER "+winner.toString()+" WINS!");
                    moveUp.setEnabled(false);
                    moveRight.setEnabled(false);
                    moveLeft.setEnabled(false);
                    moveDown.setEnabled(false);
                    String cube="";
                    for(int x=0; x<5; x++)
                    {
                        for(int y=0; y<5; y++)
                        {
                            cube="x"+x+"y"+y;
                            map.get(cube).setEnabled(false);
                        }
                    }
                    playerChoiceX.setEnabled(false);
                    playerChoiceO.setEnabled(false);
                    quitGame.setEnabled(false);
                    resetGame.setEnabled(false);
                    startNewGame.setEnabled(true);
                }
            }
            
            cubeX=-1;
            cubeY=-1;
            cubeCoordinatesLabel.setText("NONE");
        }
        else
            currentNotificationLabel.setText("PLEASE SELECT A CUBE FIRST!");
    }
    
    public void updateBoard(int x, int y, Direction dir)
    {
        String cubeName="";
        javax.swing.JButton cube;
        
        if(dir==Direction.UP || dir==Direction.DOWN)
        {
            for(int j=0; j<5; j++)
            {
                cubeName="x"+x+"y"+j;
                cube = map.get(cubeName);
                if(game.getFaceType(x, j) == FaceType.BLANK)
                    cube.setText("");
                else
                    cube.setText(game.getFaceType(x, j).toString());
            }
        }
        
        if(dir==Direction.RIGHT || dir==Direction.LEFT)
        {
            for(int i=0; i<5; i++)
            {
                cubeName="x"+i+"y"+y;
                cube = map.get(cubeName);
                if(game.getFaceType(i, y) == FaceType.BLANK)
                    cube.setText("");
                else
                    cube.setText(game.getFaceType(i, y).toString());
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        x0y0 = new javax.swing.JButton();
        x1y0 = new javax.swing.JButton();
        x2y0 = new javax.swing.JButton();
        x3y0 = new javax.swing.JButton();
        x4y0 = new javax.swing.JButton();
        x1y1 = new javax.swing.JButton();
        x0y1 = new javax.swing.JButton();
        x4y1 = new javax.swing.JButton();
        x3y1 = new javax.swing.JButton();
        x2y1 = new javax.swing.JButton();
        x1y2 = new javax.swing.JButton();
        x0y2 = new javax.swing.JButton();
        x4y2 = new javax.swing.JButton();
        x3y2 = new javax.swing.JButton();
        x2y2 = new javax.swing.JButton();
        x1y3 = new javax.swing.JButton();
        x0y3 = new javax.swing.JButton();
        x4y3 = new javax.swing.JButton();
        x3y3 = new javax.swing.JButton();
        x2y3 = new javax.swing.JButton();
        x1y4 = new javax.swing.JButton();
        x0y4 = new javax.swing.JButton();
        x4y4 = new javax.swing.JButton();
        x3y4 = new javax.swing.JButton();
        x2y4 = new javax.swing.JButton();
        moveDown = new javax.swing.JButton();
        moveUp = new javax.swing.JButton();
        moveLeft = new javax.swing.JButton();
        moveRight = new javax.swing.JButton();
        playerTurnLabel = new javax.swing.JLabel();
        turnLabel = new javax.swing.JLabel();
        cubeSelectedLabel = new javax.swing.JLabel();
        cubeCoordinatesLabel = new javax.swing.JLabel();
        notificationsLabel = new javax.swing.JLabel();
        currentNotificationLabel = new javax.swing.JLabel();
        playerChoiceX = new javax.swing.JButton();
        playerChoiceO = new javax.swing.JButton();
        startNewGame = new javax.swing.JButton();
        quitGame = new javax.swing.JButton();
        resetGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(550, 580));

        x0y0.setMaximumSize(new java.awt.Dimension(20, 20));
        x0y0.setMinimumSize(new java.awt.Dimension(20, 20));
        x0y0.setPreferredSize(new java.awt.Dimension(20, 20));
        x0y0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x0y0ActionPerformed(evt);
            }
        });

        x1y0.setMaximumSize(new java.awt.Dimension(20, 20));
        x1y0.setMinimumSize(new java.awt.Dimension(20, 20));
        x1y0.setPreferredSize(new java.awt.Dimension(20, 20));
        x1y0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1y0ActionPerformed(evt);
            }
        });

        x2y0.setMaximumSize(new java.awt.Dimension(20, 20));
        x2y0.setMinimumSize(new java.awt.Dimension(20, 20));
        x2y0.setPreferredSize(new java.awt.Dimension(20, 20));
        x2y0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2y0ActionPerformed(evt);
            }
        });

        x3y0.setMaximumSize(new java.awt.Dimension(20, 20));
        x3y0.setMinimumSize(new java.awt.Dimension(20, 20));
        x3y0.setPreferredSize(new java.awt.Dimension(20, 20));
        x3y0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3y0ActionPerformed(evt);
            }
        });

        x4y0.setMaximumSize(new java.awt.Dimension(20, 20));
        x4y0.setMinimumSize(new java.awt.Dimension(20, 20));
        x4y0.setPreferredSize(new java.awt.Dimension(20, 20));
        x4y0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4y0ActionPerformed(evt);
            }
        });

        x1y1.setMaximumSize(new java.awt.Dimension(20, 20));
        x1y1.setMinimumSize(new java.awt.Dimension(20, 20));
        x1y1.setPreferredSize(new java.awt.Dimension(20, 20));
        x1y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1y1ActionPerformed(evt);
            }
        });

        x0y1.setMaximumSize(new java.awt.Dimension(20, 20));
        x0y1.setMinimumSize(new java.awt.Dimension(20, 20));
        x0y1.setPreferredSize(new java.awt.Dimension(20, 20));
        x0y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x0y1ActionPerformed(evt);
            }
        });

        x4y1.setMaximumSize(new java.awt.Dimension(20, 20));
        x4y1.setMinimumSize(new java.awt.Dimension(20, 20));
        x4y1.setPreferredSize(new java.awt.Dimension(20, 20));
        x4y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4y1ActionPerformed(evt);
            }
        });

        x3y1.setMaximumSize(new java.awt.Dimension(20, 20));
        x3y1.setMinimumSize(new java.awt.Dimension(20, 20));
        x3y1.setPreferredSize(new java.awt.Dimension(20, 20));
        x3y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3y1ActionPerformed(evt);
            }
        });

        x2y1.setMaximumSize(new java.awt.Dimension(20, 20));
        x2y1.setMinimumSize(new java.awt.Dimension(20, 20));
        x2y1.setPreferredSize(new java.awt.Dimension(20, 20));
        x2y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2y1ActionPerformed(evt);
            }
        });

        x1y2.setMaximumSize(new java.awt.Dimension(20, 20));
        x1y2.setMinimumSize(new java.awt.Dimension(20, 20));
        x1y2.setPreferredSize(new java.awt.Dimension(20, 20));
        x1y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1y2ActionPerformed(evt);
            }
        });

        x0y2.setMaximumSize(new java.awt.Dimension(20, 20));
        x0y2.setMinimumSize(new java.awt.Dimension(20, 20));
        x0y2.setPreferredSize(new java.awt.Dimension(20, 20));
        x0y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x0y2ActionPerformed(evt);
            }
        });

        x4y2.setMaximumSize(new java.awt.Dimension(20, 20));
        x4y2.setMinimumSize(new java.awt.Dimension(20, 20));
        x4y2.setPreferredSize(new java.awt.Dimension(20, 20));
        x4y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4y2ActionPerformed(evt);
            }
        });

        x3y2.setMaximumSize(new java.awt.Dimension(20, 20));
        x3y2.setMinimumSize(new java.awt.Dimension(20, 20));
        x3y2.setPreferredSize(new java.awt.Dimension(20, 20));
        x3y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3y2ActionPerformed(evt);
            }
        });

        x2y2.setMaximumSize(new java.awt.Dimension(20, 20));
        x2y2.setMinimumSize(new java.awt.Dimension(20, 20));
        x2y2.setPreferredSize(new java.awt.Dimension(20, 20));
        x2y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2y2ActionPerformed(evt);
            }
        });

        x1y3.setMaximumSize(new java.awt.Dimension(20, 20));
        x1y3.setMinimumSize(new java.awt.Dimension(20, 20));
        x1y3.setPreferredSize(new java.awt.Dimension(20, 20));
        x1y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1y3ActionPerformed(evt);
            }
        });

        x0y3.setMaximumSize(new java.awt.Dimension(20, 20));
        x0y3.setMinimumSize(new java.awt.Dimension(20, 20));
        x0y3.setPreferredSize(new java.awt.Dimension(20, 20));
        x0y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x0y3ActionPerformed(evt);
            }
        });

        x4y3.setMaximumSize(new java.awt.Dimension(20, 20));
        x4y3.setMinimumSize(new java.awt.Dimension(20, 20));
        x4y3.setPreferredSize(new java.awt.Dimension(20, 20));
        x4y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4y3ActionPerformed(evt);
            }
        });

        x3y3.setMaximumSize(new java.awt.Dimension(20, 20));
        x3y3.setMinimumSize(new java.awt.Dimension(20, 20));
        x3y3.setPreferredSize(new java.awt.Dimension(20, 20));
        x3y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3y3ActionPerformed(evt);
            }
        });

        x2y3.setMaximumSize(new java.awt.Dimension(20, 20));
        x2y3.setMinimumSize(new java.awt.Dimension(20, 20));
        x2y3.setPreferredSize(new java.awt.Dimension(20, 20));
        x2y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2y3ActionPerformed(evt);
            }
        });

        x1y4.setMaximumSize(new java.awt.Dimension(20, 20));
        x1y4.setMinimumSize(new java.awt.Dimension(20, 20));
        x1y4.setPreferredSize(new java.awt.Dimension(20, 20));
        x1y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1y4ActionPerformed(evt);
            }
        });

        x0y4.setMaximumSize(new java.awt.Dimension(20, 20));
        x0y4.setMinimumSize(new java.awt.Dimension(20, 20));
        x0y4.setPreferredSize(new java.awt.Dimension(20, 20));
        x0y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x0y4ActionPerformed(evt);
            }
        });

        x4y4.setMaximumSize(new java.awt.Dimension(20, 20));
        x4y4.setMinimumSize(new java.awt.Dimension(20, 20));
        x4y4.setPreferredSize(new java.awt.Dimension(20, 20));
        x4y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4y4ActionPerformed(evt);
            }
        });

        x3y4.setMaximumSize(new java.awt.Dimension(20, 20));
        x3y4.setMinimumSize(new java.awt.Dimension(20, 20));
        x3y4.setPreferredSize(new java.awt.Dimension(20, 20));
        x3y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3y4ActionPerformed(evt);
            }
        });

        x2y4.setMaximumSize(new java.awt.Dimension(20, 20));
        x2y4.setMinimumSize(new java.awt.Dimension(20, 20));
        x2y4.setPreferredSize(new java.awt.Dimension(20, 20));
        x2y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2y4ActionPerformed(evt);
            }
        });

        moveDown.setText("D");
        moveDown.setMaximumSize(new java.awt.Dimension(20, 20));
        moveDown.setMinimumSize(new java.awt.Dimension(20, 20));
        moveDown.setPreferredSize(new java.awt.Dimension(20, 20));
        moveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownActionPerformed(evt);
            }
        });

        moveUp.setText("U");
        moveUp.setMaximumSize(new java.awt.Dimension(20, 20));
        moveUp.setMinimumSize(new java.awt.Dimension(20, 20));
        moveUp.setPreferredSize(new java.awt.Dimension(20, 20));
        moveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpActionPerformed(evt);
            }
        });

        moveLeft.setText("L");
        moveLeft.setMaximumSize(new java.awt.Dimension(20, 20));
        moveLeft.setMinimumSize(new java.awt.Dimension(20, 20));
        moveLeft.setPreferredSize(new java.awt.Dimension(20, 20));
        moveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveLeftActionPerformed(evt);
            }
        });

        moveRight.setText("R");
        moveRight.setMaximumSize(new java.awt.Dimension(20, 20));
        moveRight.setMinimumSize(new java.awt.Dimension(20, 20));
        moveRight.setPreferredSize(new java.awt.Dimension(20, 20));
        moveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveRightActionPerformed(evt);
            }
        });

        playerTurnLabel.setText("PLAYER TURN:");

        turnLabel.setText("NONE");

        cubeSelectedLabel.setText("CUBE SELECTED:");

        cubeCoordinatesLabel.setText("NONE");

        notificationsLabel.setText("NOTIFICATIONS: ");

        currentNotificationLabel.setText("NONE");

        playerChoiceX.setText("X");
        playerChoiceX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerChoiceXActionPerformed(evt);
            }
        });

        playerChoiceO.setText("O");
        playerChoiceO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerChoiceOActionPerformed(evt);
            }
        });

        startNewGame.setText("START NEW GAME");
        startNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewGameActionPerformed(evt);
            }
        });

        quitGame.setText("QUIT GAME");
        quitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitGameActionPerformed(evt);
            }
        });

        resetGame.setText("RESET GAME");
        resetGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(moveLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(x0y4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x1y4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x2y4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x3y4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x4y4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(x0y3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x1y3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x2y3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x3y3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x4y3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(x0y2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x1y2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x2y2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x3y2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x4y2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(x0y1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x1y1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x2y1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x3y1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x4y1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(x0y0, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x1y0, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x2y0, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x3y0, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(x4y0, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(moveDown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(moveUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(moveRight, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerTurnLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(turnLabel)
                        .addGap(66, 66, 66)
                        .addComponent(cubeSelectedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cubeCoordinatesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notificationsLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playerChoiceX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(playerChoiceO)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentNotificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startNewGame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quitGame, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetGame, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moveUp, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(moveRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(x0y0, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x1y0, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x2y0, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x3y0, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x4y0, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(x0y1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x1y1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x2y1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x3y1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x4y1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(x0y2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x1y2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x2y2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x3y2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x4y2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(x0y3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x1y3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x2y3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x3y3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x4y3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(x0y4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x1y4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x2y4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x3y4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(x4y4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(moveLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(moveDown, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerTurnLabel)
                    .addComponent(turnLabel)
                    .addComponent(cubeSelectedLabel)
                    .addComponent(cubeCoordinatesLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notificationsLabel)
                    .addComponent(currentNotificationLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerChoiceX)
                    .addComponent(playerChoiceO)
                    .addComponent(startNewGame)
                    .addComponent(quitGame)
                    .addComponent(resetGame))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void x0y0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(0,0);
    }                                    

    private void x1y0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(1,0);
    }                                    

    private void x2y0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(2,0);
    }                                    

    private void x3y0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(3,0);
    }                                    

    private void x4y0ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(4,0);
    }                                    

    private void x0y1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(0,1);
    }                                    

    private void x1y1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(1,1);
    }                                    

    private void x2y1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(2,1);
    }                                    

    private void x3y1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(3,1);
    }                                    

    private void x4y1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(4,1);
    }                                    

    private void x0y2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(0,2);
    }                                    

    private void x1y2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(1,2);
    }                                    

    private void x2y2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(2,2);
    }                                    

    private void x3y2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(3,2);
    }                                    

    private void x4y2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(4,2);
    }                                    

    private void x0y3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(0,3);
    }                                    

    private void x1y3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(1,3);
    }                                    

    private void x2y3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(2,3);
    }                                    

    private void x3y3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(3,3);
    }                                    

    private void x4y3ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(4,3);
    }                                    

    private void x0y4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(0,4);
    }                                    

    private void x1y4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(1,4);
    }                                    

    private void x2y4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(2,4);
    }                                    

    private void x3y4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(3,4);
    }                                    

    private void x4y4ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        selectCube(4,4);
    }                                    

    private void moveUpActionPerformed(java.awt.event.ActionEvent evt) {                                       
        selectDirection(Direction.UP);
    }                                      

    private void moveRightActionPerformed(java.awt.event.ActionEvent evt) {                                          
        selectDirection(Direction.RIGHT);
    }                                         

    private void moveLeftActionPerformed(java.awt.event.ActionEvent evt) {                                         
        selectDirection(Direction.LEFT);
    }                                        

    private void moveDownActionPerformed(java.awt.event.ActionEvent evt) {                                         
        selectDirection(Direction.DOWN);
    }                                        

    private void playerChoiceXActionPerformed(java.awt.event.ActionEvent evt) {                                              
        game.setCurrentPlayer(Game.FaceType.X);
        game.setFirstPlayer(FaceType.X);
        turnLabel.setText(game.getCurrentPlayer().toString());
        currentNotificationLabel.setText("New Game Started");
        playerChoiceO.setEnabled(false);
        playerChoiceX.setEnabled(false);
        
        moveUp.setEnabled(true);
        moveRight.setEnabled(true);
        moveLeft.setEnabled(true);
        moveDown.setEnabled(true);
        String cube="";
        for(int x=0; x<5; x++)
        {
            for(int y=0; y<5; y++)
            {
                cube="x"+x+"y"+y;
                map.get(cube).setEnabled(true);
            }
        }
        quitGame.setEnabled(true);
        resetGame.setEnabled(true);
    }                                             

    private void playerChoiceOActionPerformed(java.awt.event.ActionEvent evt) {                                              
        game.setCurrentPlayer(Game.FaceType.O);
        game.setFirstPlayer(FaceType.O);
        turnLabel.setText(game.getCurrentPlayer().toString());
        currentNotificationLabel.setText("New Game Started");
        playerChoiceO.setEnabled(false);
        playerChoiceX.setEnabled(false);
        
        moveUp.setEnabled(true);
        moveRight.setEnabled(true);
        moveLeft.setEnabled(true);
        moveDown.setEnabled(true);
        String cube="";
        for(int x=0; x<5; x++)
        {
            for(int y=0; y<5; y++)
            {
                cube="x"+x+"y"+y;
                map.get(cube).setEnabled(true);
            }
        }
        quitGame.setEnabled(true);
        resetGame.setEnabled(true);
    }                                             

    private void startNewGameActionPerformed(java.awt.event.ActionEvent evt) {                                             
        currentNotificationLabel.setText("Player 1 please select your symbol below.");
        game = new Game();
        String cube="";
        for(int x=0; x<5; x++)
        {
            for(int y=0; y<5; y++)
            {
                cube="x"+x+"y"+y;
                map.get(cube).setText("");
            }
        }
        startNewGame.setEnabled(false);
        playerChoiceX.setEnabled(true);
        playerChoiceO.setEnabled(true);
    }                                            

    private void quitGameActionPerformed(java.awt.event.ActionEvent evt) {                                         
        FaceType currentPlayer = game.getCurrentPlayer();
        FaceType winner = FaceType.BLANK;
        if(currentPlayer == FaceType.X)
            winner = FaceType.O;
        else
            winner = FaceType.X;
        quitGame.setEnabled(false);
        resetGame.setEnabled(false);
        game = new Game();
        moveUp.setEnabled(false);
        moveRight.setEnabled(false);
        moveLeft.setEnabled(false);
        moveDown.setEnabled(false);
        String cube="";
        for(int x=0; x<5; x++)
        {
            for(int y=0; y<5; y++)
            {
                cube="x"+x+"y"+y;
                map.get(cube).setText("");
                map.get(cube).setEnabled(false);
            }
        }
        playerChoiceX.setEnabled(false);
        playerChoiceO.setEnabled(false);
        startNewGame.setEnabled(true);
        currentNotificationLabel.setText("Player "+currentPlayer+" has quit. Player "+winner+" wins by default.");
        turnLabel.setText("NONE");
    }                                        

    private void resetGameActionPerformed(java.awt.event.ActionEvent evt) {                                          

        FaceType first = game.getFirstPlayer();
        game = new Game();
        game.setCurrentPlayer(first);
        game.setFirstPlayer(first);
        String cube="";
        for(int x=0; x<5; x++)
        {
            for(int y=0; y<5; y++)
            {
                cube="x"+x+"y"+y;
                map.get(cube).setText("");
            }
        }
        playerChoiceX.setEnabled(false);
        playerChoiceO.setEnabled(false);
        currentNotificationLabel.setText("Game has been Reset.");
        turnLabel.setText(game.getCurrentPlayer().toString());
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel cubeCoordinatesLabel;
    private javax.swing.JLabel cubeSelectedLabel;
    private javax.swing.JLabel currentNotificationLabel;
    private javax.swing.JButton moveDown;
    private javax.swing.JButton moveLeft;
    private javax.swing.JButton moveRight;
    private javax.swing.JButton moveUp;
    private javax.swing.JLabel notificationsLabel;
    private javax.swing.JButton playerChoiceO;
    private javax.swing.JButton playerChoiceX;
    private javax.swing.JLabel playerTurnLabel;
    private javax.swing.JButton quitGame;
    private javax.swing.JButton resetGame;
    private javax.swing.JButton startNewGame;
    private javax.swing.JLabel turnLabel;
    private javax.swing.JButton x0y0;
    private javax.swing.JButton x0y1;
    private javax.swing.JButton x0y2;
    private javax.swing.JButton x0y3;
    private javax.swing.JButton x0y4;
    private javax.swing.JButton x1y0;
    private javax.swing.JButton x1y1;
    private javax.swing.JButton x1y2;
    private javax.swing.JButton x1y3;
    private javax.swing.JButton x1y4;
    private javax.swing.JButton x2y0;
    private javax.swing.JButton x2y1;
    private javax.swing.JButton x2y2;
    private javax.swing.JButton x2y3;
    private javax.swing.JButton x2y4;
    private javax.swing.JButton x3y0;
    private javax.swing.JButton x3y1;
    private javax.swing.JButton x3y2;
    private javax.swing.JButton x3y3;
    private javax.swing.JButton x3y4;
    private javax.swing.JButton x4y0;
    private javax.swing.JButton x4y1;
    private javax.swing.JButton x4y2;
    private javax.swing.JButton x4y3;
    private javax.swing.JButton x4y4;
    // End of variables declaration                   
}
